              ** Basic Analysis **
      (Select * will display all the records from the mentioned table)
Use Sales;
SELECT * FROM customers; 
SELECT * FROM date;
SELECT * FROM markets;
SELECT * FROM products;
SELECT * FROM transactions;

        ** Total number of transaction in the sales data **
    (To find the number of particular record we use COUNT(*))
SELECT COUNT(*) FROM transactions;
  
        ** Total Number of transactions in chennai (market code for chennai is Mark001) **
SELECT COUNT(*) FROM transactions
WHERE market_code = 'Mark001";    

       ** Show distict product codes that were sold in Chennai **
SELECT distict product_code from transactions 
WHERE market_code = 'Mark001';

        ** Show transactions where currency is in US Dollars **
SELECT * from transactions 
WHERE currency = 'USD';

       ** Transactions in the year 2020 joined by date table **
SELECT * from transactions
INNER JOIN date on transactions.order_date = date.date
hWHERE year=2020;

       ** Total Revenue in the year 2020 ** 
SELECT sum(sales_amount) from transactions
INNER JOIN date on transactions.order_date = date.date
WHERE year = 2020;

        ** Total Revenue in the year 2020 in the month of January **
SELECT sum(sales_amount) from transactions
INNER JOIN date on transactions.order_date = date.date
WHERE year = 2020 and month_name = 'January';

       ** Total Revenue in the Year 2019 **
SELECT sum(sales_amount) from transactions
INNER JOIN date on transactions.order_date = date.date
WHERE year = 2019;

        ** Total Revenue of Chennai in 2020 **
SELECT sum(sales_amount) from transactions as Revenue
INNER JOIN date on transactions.order_date = date.date
WHERE year = 2020 and market_code = 'Mark001';

         ** Distict products sold in Chennai **
SELECT distict product_code from transactions
WHERE market_code = 'Mark001';

    ** ADVANCED ANALYSIS **
    ** Revenue breakdown by cities **
SELECT markets.markets_name, transactions.sales_amount
FROM transactions
INNER JOIN markets on transactions.market_code = markets.market_code
ORDER BY sales_amount DESC;

      
   **  Revenue breakdown by years and months **
SELECT date.date_yy_mmm, transactions.sales_amount
FROM transactions
INNER JOIN date on transactions.order_date = date.date
ORDER BY sales_amount DESC;

   ** Top 5 customers by Revenue **
SELECT customers.customer_name, transactions.sales_amount
FROM transactions
INNER JOIN customers on transactions.customer_code = customers.customer_code
ORDER BY sales_amount DESC
LIMIT 5;

  ** Top 5 products by Revenue **
SELECT product_code, sales_amount 
FROM transactions
ORDER BY sales_amount DESC
LIMIT 5;

   ** Total Revenue in January 2020 **
SELECT sum(sales_amount)
FROM transactions
INNER JOIN date on transactions.order_date = date.date
WHERE year = 2020 and month_name ='January';
